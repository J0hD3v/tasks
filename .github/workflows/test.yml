# Nom du pipeline
name: E2E CI/CD Cypress +  PHP + Apache + MySQL
# DÃ©clencheurs push et pull request github
on:
  push:
    branches: [ "test", "main" ]
  pull_request:
    branches: [ "test" , "main"]
  workflow_dispatch:

jobs:
  # Nom du CI/CD 
  e2e:
    runs-on: ubuntu-latest
    # Service Base de donnÃ©es MySQL
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: TestPassword@1234
          MYSQL_DATABASE: taskdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -prootpw"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    # Etapes du pipeline
    steps:
      # RÃ©cupÃ©ration du code
      - name: Checkout
        uses: actions/checkout@v4
      # Installation de PHp et Composer
      - name: Setup PHP CLI (Composer & outils)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, sodium, zip
          coverage: none
          tools: composer
      # CrÃ©er le fichier env
      - name: Creer fichier env
        run: |
          cat > env.php <<'PHP'
          <?php
          const BDD_LOGIN = "root";
          const BDD_PASSWORD = "TestPassword@1234";
          const BDD_SERVER = "127.0.0.1";
          const BDD_NAME = "taskdb";
          const BASE_URL = "/";
          PHP
      # Installer les dÃ©pendances PHP
      - name: Composer install
        run: |
          composer install --no-interaction --prefer-dist
      # Migration BDD
      - name: Migration BDD
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root -pTestPassword@1234 < base.sql
      # DÃ©marrer le serveur PHP
      - name: Start serveur PHP
        run: |
          php -S 127.0.0.1:8000 &
      # Installer et dÃ©marrer les tests Cypress
      - name: Test Cypress
        uses: cypress-io/github-action@v6
  # Deploiement
  deploy:
    runs-on : ubuntun-latest
    needs : e2e (job test)
    steps:
      # RÃ©cupÃ©ration du code
      - name: Checkout
        uses: actions/checkout@v4
      # Installation de PHp et Composer
      - name: Setup PHP CLI (Composer & outils)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, sodium, zip
          coverage: none
          tools: composer
      # CrÃ©er le fichier env
      - name: Creer fichier env
        run: |
          cat > env.php <<'PHP'
          <?php
          const BDD_LOGIN = "${{ secrets.BDD_USERNAME }}";
          const BDD_PASSWORD = "${{ secrets.BDD_PASSWORD }}";
          const BDD_SERVER = "${{ secrets.BDD_HOST }}";
          const BDD_NAME = "${{ secrets.BDD_NAME }}";
          const BASE_URL = "/";
          PHP
      # Installer les dÃ©pendances PHP
      - name: Composer install
        run: |
          composer install --no-interaction --prefer-dist
      # Deploiement (github action)
      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
